server.port = 8082

#===============  Redis  =======================
spring.redis.database= 0
spring.redis.host= localhost
spring.redis.port= 6379
spring.redis.password=
spring.redis.timeout= 1000


#===============  Points  =======================
#spring.datasource.url=jdbc:mysql://172.26.143.181:3306/points_system?useUnicode=true&characterEncoding=UTF-8&serverTimezone=GMT%2B8
#spring.datasource.username=root
#spring.datasource.password=Ebiz2019
#spring.datasource.driver-class-name=com.mysql.jdbc.Driver

#===============  Default  =======================
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/mysql?useUnicode=true&characterEncoding=UTF-8&serverTimezone=GMT%2B8
spring.datasource.username=root
spring.datasource.password=

#===============  DynamicDataSource  =======================
#spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.datasource.url=jdbc:mysql://localhost:3306/ds1?useUnicode=true&characterEncoding=UTF-8&serverTimezone=GMT%2B8,jdbc:mysql://localhost:3306/ds2?useUnicode=true&characterEncoding=UTF-8&serverTimezone=GMT%2B8
#spring.datasource.username=root
#spring.datasource.password=root


mybatis.mapper-locations=classpath:mapper/*.xml


#===============  Sharding Sphere  =======================
#spring.shardingsphere.datasource.names=ds0,ds1
#spring.shardingsphere.props.sql.show=true
#
##==============  ds0 config  =======================
#spring.shardingsphere.datasource.ds0.type=com.alibaba.druid.pool.DruidDataSource
#spring.shardingsphere.datasource.ds0.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.shardingsphere.datasource.ds0.url=jdbc:mysql://localhost:3306/ds1?useUnicode=true&characterEncoding=UTF-8&serverTimezone=GMT%2B8
#spring.shardingsphere.datasource.ds0.username=root
#spring.shardingsphere.datasource.ds0.password=root
#
##==============  ds1 config  =======================
#spring.shardingsphere.datasource.ds1.type=com.alibaba.druid.pool.DruidDataSource
#spring.shardingsphere.datasource.ds1.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.shardingsphere.datasource.ds1.url=jdbc:mysql://localhost:3306/ds2?useUnicode=true&characterEncoding=UTF-8&serverTimezone=GMT%2B8
#spring.shardingsphere.datasource.ds1.username=root
#spring.shardingsphere.datasource.ds1.password=root
#
#spring.shardingsphere.sharding.default-database-strategy.inline.sharding-column=customer_id
#spring.shardingsphere.sharding.default-database-strategy.inline.algorithm-expression=ds$->{customer_id % 2}

#spring.shardingsphere.sharding.tables.t_order.actual-data-nodes=mysql.t_order$->{0..1}
#spring.shardingsphere.sharding.tables.t_order.table-strategy.inline.sharding-column=order_id
#spring.shardingsphere.sharding.tables.t_order.table-strategy.inline.algorithm-expression=t_order$->{order_id % 2}


#===============  MongoDB  =======================
#spring.data.mongodb.uri= mongodb://admin:admin@10.22.224.89:27017/admin


#===============  kafka producer  =======================
#spring.kafka.producer.bootstrap-servers = 10.22.224.89:9092
#spring.kafka.producer.retries = 1
#spring.kafka.producer.batch-size = 16384
#spring.kafka.producer.buffer-memory = 33554432
#spring.kafka.producer.properties.max.requst.size = 2097152
#spring.kafka.producer.key-serializer = org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.value-serializer = org.apache.kafka.common.serialization.StringSerializer

#===============  kafka consumer  =======================
#spring.kafka.consumer.bootstrap-servers = 10.22.224.89:9092
#spring.kafka.consumer.group-id = 0
#spring.kafka.consumer.auto-offset-reset = earliest
#spring.kafka.consumer.enable-auto-commit = true
#spring.kafka.consumer.auto-commit-interval = 100

