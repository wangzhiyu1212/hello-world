server.port = 8082

#===============  Redis  =======================
spring.redis.database= 0
spring.redis.host= localhost
spring.redis.port= 6379
spring.redis.password=
spring.redis.timeout= 1000

#===============  Default  =======================
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.datasource.url=jdbc:mysql://localhost:3306/mysql?useUnicode=true&characterEncoding=UTF-8&serverTimezone=GMT%2B8
#spring.datasource.username=root
#spring.datasource.password=

mybatis.mapper-locations=classpath:mapper/*.xml

#===============  Shardingsphere  =======================
spring.shardingsphere.datasource.names=ds0,ds1

spring.shardingsphere.datasource.ds0.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.ds0.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.ds0.url=jdbc:mysql://localhost:3306/policy_00?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=UTC
spring.shardingsphere.datasource.ds0.username=root
spring.shardingsphere.datasource.ds0.password=


spring.shardingsphere.datasource.ds1.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.ds1.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.ds1.url=jdbc:mysql://localhost:3306/policy_01?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=UTC
spring.shardingsphere.datasource.ds1.username=root
spring.shardingsphere.datasource.ds1.password=

spring.shardingsphere.sharding.tables.policy.actual-data-nodes=ds$->{0..1}.policy$->{0..3}
spring.shardingsphere.sharding.tables.policy.table-strategy.inline.sharding-column=id
spring.shardingsphere.sharding.tables.policy.table-strategy.inline.algorithm-expression=policy$->{id%4}
spring.shardingsphere.sharding.tables.policy.key-generator.column=id
spring.shardingsphere.sharding.tables.policy.key-generator.type=TestShardingKeyGenerator


spring.shardingsphere.sharding.default-database-strategy.standard.sharding-column=id
spring.shardingsphere.sharding.default-database-strategy.standard.precise-algorithm-class-name=com.example.helloworld.dao.shardingAlgorithm.PreciseShardingAlgorithmImpl
spring.shardingsphere.sharding.binding-tables=policy

spring.shardingsphere.props.sql.show = true

#===============  DynamicDataSource  =======================
#spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.datasource.url=jdbc:mysql://localhost:3306/ds1?useUnicode=true&characterEncoding=UTF-8&serverTimezone=GMT%2B8,jdbc:mysql://localhost:3306/ds2?useUnicode=true&characterEncoding=UTF-8&serverTimezone=GMT%2B8
#spring.datasource.username=root
#spring.datasource.password=root

#===============  MongoDB  =======================
#spring.data.mongodb.uri= mongodb://admin:admin@10.22.224.89:27017/admin


#===============  kafka producer  =======================
#spring.kafka.producer.bootstrap-servers = 10.22.224.89:9092
#spring.kafka.producer.retries = 1
#spring.kafka.producer.batch-size = 16384
#spring.kafka.producer.buffer-memory = 33554432
#spring.kafka.producer.properties.max.requst.size = 2097152
#spring.kafka.producer.key-serializer = org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.value-serializer = org.apache.kafka.common.serialization.StringSerializer

#===============  kafka consumer  =======================
#spring.kafka.consumer.bootstrap-servers = 10.22.224.89:9092
#spring.kafka.consumer.group-id = 0
#spring.kafka.consumer.auto-offset-reset = earliest
#spring.kafka.consumer.enable-auto-commit = true
#spring.kafka.consumer.auto-commit-interval = 100

